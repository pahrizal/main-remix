{
  "version": 3,
  "sources": ["../../../app/stores/gameState.ts", "../../../node_modules/uuid/dist/esm-browser/index.js", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/validate.js", "../../../node_modules/uuid/dist/esm-browser/regex.js", "../../../node_modules/uuid/dist/esm-browser/v4.js"],
  "sourcesContent": ["import { Reducer } from \"redux\";\nimport { Socket } from \"socket.io-client\";\nimport { ClientEvent } from \"~/controllers/client\";\nimport { ThunkAction } from \"./index\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport { SocketActions } from \"./socketState\";\n\nexport interface GameState {\n  currentGameId: string | null;\n  players: string[];\n}\n\nexport const initialGameState: GameState = {\n  currentGameId: null,\n  players: [],\n};\n\ninterface GameActionTypes {\n  readonly SET_CURRENT_GAME_ID: \"SET_CURRENT_GAME_ID\";\n  readonly SET_PLAYERS: \"SET_PLAYERS\";\n}\n\nconst GameActionsTypes: GameActionTypes = {\n  SET_CURRENT_GAME_ID: \"SET_CURRENT_GAME_ID\",\n  SET_PLAYERS: \"SET_PLAYERS\",\n};\n\ninterface SetCurrentGameId {\n  type: \"SET_CURRENT_GAME_ID\";\n  payload: typeof initialGameState.currentGameId;\n}\ninterface SetPlayers {\n  type: \"SET_PLAYERS\";\n  payload: typeof initialGameState.players;\n}\n\nexport type GameActions = SetCurrentGameId | SetPlayers;\n\nexport const gameActions = {\n  create: (): ThunkAction<GameActions | SocketActions> => {\n    return async (dispatch, getState) => {\n      const newGameId = uuidV4();\n      dispatch({\n        type: GameActionsTypes.SET_CURRENT_GAME_ID,\n        payload: newGameId,\n      });\n    };\n  },\n  join: (gameId: string): ThunkAction<GameActions | SocketActions> => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: GameActionsTypes.SET_CURRENT_GAME_ID,\n        payload: gameId,\n      });\n    };\n  },\n};\n\nexport const GameReducer: Reducer<GameState, GameActions> = (\n  state: GameState | undefined,\n  action: GameActions\n): GameState => {\n  if (state === undefined) {\n    return initialGameState;\n  }\n\n  switch (action.type) {\n    case GameActionsTypes.SET_CURRENT_GAME_ID:\n      return {\n        ...state,\n        currentGameId: action.payload,\n      };\n    case GameActionsTypes.SET_PLAYERS:\n      return {\n        ...state,\n        players: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],
  "mappings": ";;;;;AAAA;;;ACAA;;;ACAA;AAGA,IAAI;AACJ,IAAI,QAAQ,IAAI,WAAW;AACZ,eAAe;AAE5B,MAAI,CAAC,iBAAiB;AAGpB,sBAAkB,OAAO,WAAW,eAAe,OAAO,mBAAmB,OAAO,gBAAgB,KAAK,WAAW,OAAO,aAAa,eAAe,OAAO,SAAS,oBAAoB,cAAc,SAAS,gBAAgB,KAAK;AAEvO,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,SAAO,gBAAgB;AAAA;;;ACjBzB;;;ACAA;;;ACAA;AAAA,IAAO,gBAAQ;;;ADEf,kBAAkB,MAAM;AACtB,SAAO,OAAO,SAAS,YAAY,cAAM,KAAK;AAAA;AAGhD,IAAO,mBAAQ;;;ADAf,IAAI,YAAY;AAEhB,KAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAU,KAAM,KAAI,KAAO,SAAS,IAAI,OAAO;AAAA;AADxC;AAIT,mBAAmB,KAAK;AACtB,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAGjF,MAAI,OAAQ,WAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,MAAM,UAAU,IAAI,SAAS,MAAM,MAAM,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,OAAO,UAAU,IAAI,SAAS,MAAM;AAMzf,MAAI,CAAC,iBAAS,OAAO;AACnB,UAAM,UAAU;AAAA;AAGlB,SAAO;AAAA;AAGT,IAAO,oBAAQ;;;AG7Bf;AAGA,YAAY,SAAS,KAAK,QAAQ;AAChC,YAAU,WAAW;AACrB,MAAI,OAAO,QAAQ,UAAW,SAAQ,OAAO;AAE7C,OAAK,KAAK,KAAK,KAAK,KAAO;AAC3B,OAAK,KAAK,KAAK,KAAK,KAAO;AAE3B,MAAI,KAAK;AACP,aAAS,UAAU;AAEnB,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,UAAI,SAAS,KAAK,KAAK;AAAA;AAGzB,WAAO;AAAA;AAGT,SAAO,kBAAU;AAAA;AAGnB,IAAO,aAAQ;;;ANXR,IAAM,mBAA8B;AAAA,EACzC,eAAe;AAAA,EACf,SAAS;AAAA;AAQX,IAAM,mBAAoC;AAAA,EACxC,qBAAqB;AAAA,EACrB,aAAa;AAAA;AAcR,IAAM,cAAc;AAAA,EACzB,QAAQ,MAAgD;AACtD,WAAO,OAAO,UAAU,aAAa;AACnC,YAAM,YAAY;AAClB,eAAS;AAAA,QACP,MAAM,iBAAiB;AAAA,QACvB,SAAS;AAAA;AAAA;AAAA;AAAA,EAIf,MAAM,CAAC,WAA6D;AAClE,WAAO,OAAO,UAAU,aAAa;AACnC,eAAS;AAAA,QACP,MAAM,iBAAiB;AAAA,QACvB,SAAS;AAAA;AAAA;AAAA;AAAA;AAMV,IAAM,cAA+C,CAC1D,OACA,WACc;AACd,MAAI,UAAU,QAAW;AACvB,WAAO;AAAA;AAGT,UAAQ,OAAO;AAAA,SACR,iBAAiB;AACpB,aAAO;AAAA,WACF;AAAA,QACH,eAAe,OAAO;AAAA;AAAA,SAErB,iBAAiB;AACpB,aAAO;AAAA,WACF;AAAA,QACH,SAAS,OAAO;AAAA;AAAA;AAGlB,aAAO;AAAA;AAAA;",
  "names": []
}
